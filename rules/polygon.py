"""Point Structure."""
from rules.drawable import *
polygonADT = {
    is_a:None,
    "new":{
        (list, Point,):{
            args:("listOfPoints"),
            trgt:Polygon.fromPoints,
        },
        (list, Line,):{
            args:("listOfLine",),
            trgt:Polygon.fromLines,
        },
        ret:Polygon
    },
    "copy":{
        tuple():{
            args:tuple(),
            trgt:Polygon.fromPolygon
        },
        ret:Circle
    },
    "area":{
        tuple():{
            args:tuple(),
            trgt:Polygon.area
        },
        ret:float
    },
    "signedArea":{
        tuple():{
            args:tuple,
            trgt:Polygon.signedArea
        }
    },
    "centroid":{
        tuple():{
            args:tuple(),
            trgt:Polygon.centroid
        },
        ret:Point
    },
    "vertexCentroid":{
        tuple():{
            args:tuple(),
            trgt:Polygon.vertexCentroid
        },
        ret:Point
    },
    "internalAngle":{
        (float,):{
            args:("idx",),
            trgt:Polygon.internAngle
        },
        (Point,):{
            args:("point",),
            trgt:Polygon.internAngle
        },
        ret:float
    },
    "angleBisector":{
        (float,):{
            args:("idx",),
            trgt:Polygon.angleBisector
        },
        (Point,):{
            args:("point",),
            trgt:Polygon.angleBisector
        },
        ret:Line
    }
}